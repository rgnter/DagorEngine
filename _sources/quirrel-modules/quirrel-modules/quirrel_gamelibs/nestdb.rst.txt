.. autogenerated

******
nestdb
******

module 'nestdb'



*Source file: prog/gameLibs/quirrel/nestdb/nestdb.cpp*

Usage::

  let { ndbWrite, ndbRead, ndbTryRead, ndbExists, ndbDelete } = require("nestdb")

or::

  from "nestdb" import *

.. code-block:: sq

  //'nestdb' exports:
  {
    function ndbWrite(arg0, arg1): any_type, any_type -> _undocumented_
    function ndbRead(arg0): any_type -> _undocumented_
    function ndbTryRead(arg0): any_type -> _undocumented_
    function ndbExists(arg0): any_type -> _undocumented_
    function ndbDelete(arg0): any_type -> _undocumented_
  }
  

.. sq:function:: function ndbWrite(arg0, arg1)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: any_type

  :param arg1: autodoc from typemask/paramscheck
  :type arg1: any_type

  ``nparamscheck:3``

  ``typecheck mask: any_type``

.. sq:function:: function ndbRead(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: any_type

  ``nparamscheck:2``

  ``typecheck mask: any_type``

.. sq:function:: function ndbTryRead(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: any_type

  ``nparamscheck:2``

  ``typecheck mask: any_type``

.. sq:function:: function ndbExists(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: any_type

  ``nparamscheck:2``

  ``typecheck mask: any_type``

.. sq:function:: function ndbDelete(arg0)

  :param arg0: autodoc from typemask/paramscheck
  :type arg0: any_type

  ``nparamscheck:2``

  ``typecheck mask: any_type``


